var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.025,1,2.071]],["body/modules/AppModule.html",[0,1.286,1,4.038,2,1.157,3,1.639,4,2.369,5,2.369,6,3.239,7,0.031,8,3.239,9,3.239,10,3.239,11,2.942,12,1.942,13,1.372,14,1.372,15,0.226,16,0.193,17,0.16,18,2.833,19,3.354,20,0.537,21,0.505,22,2.833,23,2.369,24,2.833,25,2.369,26,2.833,27,2.833,28,2.833,29,3.354,30,2.833,31,2.833,32,2.369,33,2.833,34,2.833,35,2.833,36,2.833,37,2.833,38,2.369,39,0.226,40,0.013,41,0.019,42,0.019]],["title/controllers/AuthController.html",[43,1.306,44,2.071]],["body/controllers/AuthController.html",[7,0.031,15,0.219,16,0.186,17,0.155,20,0.486,21,0.488,39,0.219,40,0.013,41,0.019,42,0.019,43,1.119,44,2.537,45,1.119,46,2.291,47,1.775,48,2.739,49,0.534,50,1.36,51,3.916,52,3.916,53,3.916,54,2.739,55,2.03,56,2.739,57,1.15,58,2.739,59,1.587,60,1.353,61,1.465,62,4.987,63,1.587,64,2.739,65,3.916,66,2.739,67,2.739,68,2.438,69,3.916,70,2.739,71,0.583,72,1.599,73,1.775,74,2.739,75,2.739,76,2.213,77,1.995,78,2.291,79,1.599,80,1.775,81,2.739,82,2.739,83,1.775,84,1.217,85,2.739,86,2.739,87,1.119,88,1.452,89,2.739,90,2.739,91,2.739,92,1.721,93,3.916,94,2.739,95,2.739,96,2.739]],["title/modules/AuthModule.html",[0,1.025,6,1.865]],["body/modules/AuthModule.html",[0,1.399,2,1.306,3,1.782,6,3.595,7,0.031,11,3.056,12,2.113,13,1.548,14,1.548,15,0.255,16,0.217,17,0.181,19,3.649,20,0.531,21,0.57,23,2.674,39,0.255,40,0.015,41,0.021,42,0.021,44,3.218,45,1.782,76,2.791,77,2.329,97,2.674,98,3.197,99,2.674,100,3.364,101,3.197,102,2.546,103,3.197,104,4.363,105,2.072,106,3.197]],["title/injectables/AuthService.html",[76,1.548,107,0.74]],["body/injectables/AuthService.html",[7,0.031,15,0.222,16,0.189,17,0.157,20,0.463,21,0.495,39,0.222,40,0.013,41,0.019,42,0.019,49,0.542,50,1.375,57,1.16,59,1.601,60,1.364,61,1.477,63,1.375,68,2.357,71,0.981,76,1.917,78,2.325,79,1.623,87,1.136,92,1.735,107,0.917,108,1.235,109,2.325,110,4.018,111,3.957,112,3.957,113,1.623,114,2.78,115,2.671,116,2.78,117,3.957,118,2.78,119,3.31,120,3.957,121,1.632,122,3.253,123,2.78,124,1.623,125,2.78,126,2.78,127,2.78,128,2.325,129,2.325,130,3.854,131,2.025,132,2.78,133,2.78,134,2.78]],["title/controllers/CategoriesController.html",[43,1.306,135,2.071]],["body/controllers/CategoriesController.html",[7,0.031,15,0.18,16,0.153,17,0.128,20,0.449,21,0.402,39,0.18,40,0.01,41,0.016,42,0.016,43,0.922,45,0.922,47,1.463,49,0.44,50,1.18,55,2.166,57,1.227,59,1.579,60,1.346,61,1.458,63,1.694,71,0.967,72,1.983,73,2.648,83,1.463,84,1.003,87,0.922,88,1.197,92,1.836,121,1.656,135,2.202,136,1.888,137,2.258,138,1.388,139,2.41,140,1.802,141,1.646,142,2.166,143,1.888,144,2.716,145,2.258,146,2.258,147,1.197,148,2.476,149,2.258,150,2.716,151,1.197,152,2.476,153,2.258,154,1.197,155,3.193,156,2.476,157,2.258,158,1.645,159,1.645,160,1.645,161,2.166,162,1.888,163,1.197,164,2.476,165,1.197,166,2.258,167,2.258,168,1.645,169,2.258,170,2.258,171,1.645,172,2.258,173,2.258,174,2.258,175,1.645,176,2.258]],["title/modules/CategoriesModule.html",[0,1.025,8,1.865]],["body/modules/CategoriesModule.html",[0,1.558,2,1.537,3,1.986,7,0.03,8,3.523,12,2.354,13,1.822,14,1.822,15,0.3,16,0.256,17,0.213,20,0.496,21,0.67,39,0.3,40,0.017,41,0.023,42,0.023,45,1.986,102,2.837,135,3.489,161,3.2,162,3.146,177,3.146,178,3.146,179,3.762,180,3.762]],["title/injectables/CategoriesService.html",[107,0.74,161,1.694]],["body/injectables/CategoriesService.html",[7,0.031,15,0.186,16,0.158,17,0.132,20,0.426,21,0.415,39,0.186,40,0.011,41,0.017,42,0.017,49,0.454,50,1.208,57,1.304,59,1.716,60,1.462,61,1.584,63,1.716,71,1.051,87,0.951,88,1.234,92,1.86,107,0.806,108,1.034,113,1.359,121,1.67,138,1.421,139,2.447,140,1.844,141,1.684,142,1.844,143,2.908,144,2.748,147,1.844,150,2.748,151,1.844,154,1.844,155,3.222,161,1.844,163,1.234,164,2.533,165,1.234,181,1.947,182,1.696,183,2.302,184,2.328,185,2.328,186,2.328,187,2.328,188,2.328,189,2.328,190,1.696,191,2.328,192,2.533,193,2.328,194,2.328,195,2.328,196,2.328]],["title/classes/CreateCategoryDto.html",[40,0.015,144,1.694]],["body/classes/CreateCategoryDto.html",[7,0.03,15,0.323,16,0.275,17,0.229,20,0.373,39,0.323,40,0.023,41,0.024,42,0.024,49,0.789,55,1.798,57,1.019,60,1.649,71,0.861,121,1.507,144,2.7,197,1.798,198,4.26,199,2.949,200,2.467,201,4.048,202,4.048,203,3.3,204,2.623,205,2.363,206,2.949]],["title/classes/CreatePostDto.html",[40,0.015,207,1.694]],["body/classes/CreatePostDto.html",[7,0.03,15,0.27,16,0.23,17,0.191,20,0.312,39,0.27,40,0.021,41,0.022,42,0.022,49,0.66,55,2.015,57,1.287,71,1.088,72,2.985,121,1.772,141,1.64,197,1.504,200,2.196,203,3.314,204,2.194,205,1.976,206,3.304,207,2.404,208,4.568,209,2.467,210,5.114,211,5.114,212,4.535,213,3.386,214,3.386,215,3.386,216,3.726,217,2.832,218,3.386,219,3.386,220,3.386]],["title/classes/CreateUserDto.html",[40,0.015,68,1.419]],["body/classes/CreateUserDto.html",[7,0.03,15,0.243,16,0.207,17,0.172,20,0.28,39,0.243,40,0.019,41,0.02,42,0.02,49,0.593,55,2.32,57,1.315,68,1.872,71,1.112,121,1.756,122,3.555,124,2.823,197,1.351,200,2.041,203,3.385,204,1.97,205,1.775,206,3.07,216,3.805,221,4.588,222,1.97,223,4.837,224,4.837,225,4.046,226,3.041,227,4.215,228,2.543,229,3.041,230,3.041,231,4.215,232,4.215,233,4.215,234,4.215,235,3.041,236,3.041]],["title/interfaces/ExpressSwaggerCustomOptions.html",[237,2.071,238,2.328]],["body/interfaces/ExpressSwaggerCustomOptions.html",[7,0.029,15,0.211,16,0.18,17,0.149,39,0.211,41,0.018,42,0.018,49,0.515,61,2.052,71,1.276,121,1.905,200,1.848,237,1.712,238,2.78,239,2.642,240,2.209,241,4.905,242,4.905,243,4.905,244,4.905,245,4.905,246,4.905,247,4.905,248,4.905,249,4.905,250,4.905,251,4.905,252,3.746,253,5.421]],["title/guards/JwtGuard.html",[254,2.328,255,2.328]],["body/guards/JwtGuard.html",[7,0.031,15,0.285,16,0.242,17,0.202,20,0.433,21,0.635,32,2.981,39,0.285,40,0.016,41,0.022,42,0.022,49,0.695,50,1.63,57,0.897,59,1.238,60,1.055,61,1.143,63,1.238,71,0.758,92,1.342,107,1.087,252,3.924,255,3.418,256,3.564,257,2.981,258,4.845,259,3.564,260,4.662,261,3.564,262,4.692,263,4.692,264,4.387,265,2.596,266,2.981]],["title/injectables/LocalAuthGuard.html",[80,2.071,107,0.74]],["body/injectables/LocalAuthGuard.html",[7,0.03,15,0.338,16,0.288,17,0.239,20,0.524,21,0.754,39,0.338,40,0.02,41,0.025,42,0.025,80,3.393,105,2.742,107,1.213,108,1.88,258,3.539,260,3.539,264,3.539,265,3.083,267,3.539,268,3.539,269,4.232]],["title/injectables/LocalStrategy.html",[100,1.865,107,0.74]],["body/injectables/LocalStrategy.html",[7,0.031,15,0.24,16,0.204,17,0.17,20,0.479,21,0.535,39,0.24,40,0.014,41,0.02,42,0.02,49,0.586,50,1.452,57,1.052,59,1.452,60,1.237,61,1.34,63,1.043,71,0.889,76,2.738,77,2.188,87,1.227,92,1.131,100,2.439,105,1.946,107,0.968,108,1.334,110,3.501,113,1.753,119,2.512,121,1.673,122,3.367,124,2.439,129,2.512,130,4.02,131,2.188,270,2.512,271,4.179,272,3.004,273,3.004,274,4.179,275,3.004,276,4.179,277,3.004,278,3.004,279,2.512,280,2.512,281,1.753,282,3.004,283,3.004,284,3.004,285,3.004,286,3.004,287,2.512]],["title/classes/LoginUserDto.html",[40,0.015,288,2.328]],["body/classes/LoginUserDto.html",[7,0.03,15,0.296,16,0.252,17,0.21,20,0.342,39,0.296,40,0.022,41,0.023,42,0.023,49,0.723,55,2.138,57,1.212,71,1.024,121,1.675,122,3.464,124,3.121,197,1.646,200,2.331,203,3.464,204,2.401,205,2.163,216,3.507,222,2.401,225,4.026,228,3.099,288,3.507,289,4.471,290,3.706,291,3.706,292,3.706]],["title/controllers/PostsController.html",[43,1.306,293,2.071]],["body/controllers/PostsController.html",[7,0.031,15,0.181,16,0.154,17,0.128,20,0.451,21,0.405,39,0.181,40,0.01,41,0.016,42,0.016,43,0.928,45,0.928,47,1.472,49,0.443,50,1.186,55,2.171,57,1.23,59,1.584,60,1.35,61,1.462,63,1.698,71,0.97,72,1.992,73,2.657,83,1.472,84,1.009,87,0.928,88,1.204,92,1.84,121,1.659,138,1.395,139,2.418,140,1.81,141,1.653,142,1.81,147,1.204,148,2.487,150,2.722,151,1.204,152,2.487,154,1.204,156,2.487,158,1.655,159,1.655,160,1.655,163,1.204,165,1.204,168,1.655,171,1.655,175,1.655,207,2.722,293,2.212,294,1.9,295,2.271,296,1.9,297,2.271,298,2.271,299,2.271,300,2.271,301,3.199,302,2.271,303,2.174,304,1.9,305,2.487,306,2.271,307,2.271,308,2.271,309,2.271,310,2.271,311,1.9,312,2.271,313,2.271]],["title/modules/PostsModule.html",[0,1.025,9,1.865]],["body/modules/PostsModule.html",[0,1.558,2,1.537,3,1.986,7,0.03,9,3.523,12,2.354,13,1.822,14,1.822,15,0.3,16,0.256,17,0.213,20,0.496,21,0.67,39,0.3,40,0.017,41,0.023,42,0.023,45,1.986,102,2.837,293,3.489,303,3.2,304,3.146,314,3.146,315,3.146,316,3.762,317,3.762]],["title/injectables/PostsService.html",[107,0.74,303,1.694]],["body/injectables/PostsService.html",[7,0.031,15,0.186,16,0.158,17,0.132,20,0.426,21,0.415,39,0.186,40,0.011,41,0.017,42,0.017,49,0.454,50,1.208,57,1.304,59,1.716,60,1.462,61,1.584,63,1.716,71,1.051,87,0.951,88,1.234,92,1.86,107,0.806,108,1.034,113,1.359,121,1.67,138,1.421,139,2.447,140,1.844,141,1.684,142,1.844,147,1.844,150,2.748,151,1.844,154,1.844,163,1.234,165,1.234,182,1.696,183,2.302,190,1.696,192,2.533,207,2.748,296,2.908,301,3.222,303,1.844,305,2.533,318,1.947,319,2.328,320,2.328,321,2.328,322,2.328,323,2.328,324,2.328,325,2.328,326,2.328,327,2.328,328,2.328,329,2.328]],["title/modules/PrismaModule.html",[0,1.025,10,1.865]],["body/modules/PrismaModule.html",[0,1.538,2,1.507,3,1.96,7,0.03,10,3.568,12,2.324,13,1.786,14,1.786,15,0.294,16,0.251,17,0.208,20,0.442,21,0.657,39,0.294,40,0.017,41,0.023,42,0.023,102,2.801,183,2.845,330,3.084,331,3.084,332,3.084,333,3.688,334,4.013,335,4.798,336,3.688]],["title/injectables/PrismaService.html",[107,0.74,183,1.419]],["body/injectables/PrismaService.html",[7,0.031,15,0.263,16,0.224,17,0.186,20,0.411,21,0.587,39,0.263,40,0.015,41,0.021,42,0.021,49,0.643,50,1.547,57,1.121,59,1.145,60,0.976,61,1.057,63,1.547,71,0.701,107,1.032,108,1.464,110,4.332,131,3.245,183,1.978,266,2.757,281,2.6,337,2.757,338,5.045,339,4.454,340,5.816,341,4.454,342,5.403,343,3.296,344,2.757,345,3.296,346,3.296,347,2.757,348,3.296,349,3.296,350,3.296]],["title/classes/UpdateCategoryDto.html",[40,0.015,155,1.865]],["body/classes/UpdateCategoryDto.html",[7,0.03,15,0.348,16,0.296,17,0.246,20,0.491,39,0.348,40,0.02,41,0.025,42,0.025,84,1.935,138,1.78,144,2.309,155,3.111,164,3.173,197,1.935,199,3.173,281,2.542,351,3.643,352,3.173,353,4.356]],["title/classes/UpdatePostDto.html",[40,0.015,301,1.865]],["body/classes/UpdatePostDto.html",[7,0.03,15,0.348,16,0.296,17,0.246,20,0.491,39,0.348,40,0.02,41,0.025,42,0.025,84,1.935,138,1.78,197,1.935,207,2.309,209,3.173,281,2.542,301,3.111,305,3.173,352,3.173,354,3.643,355,4.356]],["title/classes/UpdateUserDto.html",[40,0.015,356,1.865]],["body/classes/UpdateUserDto.html",[7,0.03,15,0.348,16,0.296,17,0.246,20,0.491,39,0.348,40,0.02,41,0.025,42,0.025,68,1.935,79,2.542,84,1.935,138,1.78,197,1.935,222,2.822,281,2.542,352,3.173,356,3.111,357,3.643,358,4.356]],["title/controllers/UsersController.html",[43,1.306,359,2.071]],["body/controllers/UsersController.html",[7,0.031,15,0.181,16,0.154,17,0.128,20,0.451,21,0.405,39,0.181,40,0.01,41,0.016,42,0.016,43,0.928,45,0.928,47,1.472,49,0.443,50,1.186,55,2.171,57,1.23,59,1.584,60,1.35,61,1.462,63,1.698,68,2.281,71,0.97,72,1.992,73,2.657,79,1.992,83,1.472,84,1.009,87,0.928,88,1.204,92,1.84,115,1.986,121,1.659,138,1.395,139,2.418,140,1.81,141,1.653,142,1.81,147,1.204,148,2.487,150,2.722,151,1.204,152,2.487,154,1.204,156,2.487,158,1.655,159,1.655,160,1.655,163,1.204,165,1.204,168,1.655,171,1.655,175,1.655,311,1.9,356,3.199,359,2.212,360,1.9,361,2.271,362,1.9,363,2.271,364,2.271,365,2.271,366,2.271,367,2.271,368,1.9,369,2.271,370,2.271,371,2.271,372,2.271,373,2.271,374,2.271,375,2.271]],["title/modules/UsersModule.html",[0,1.025,11,1.694]],["body/modules/UsersModule.html",[0,1.504,2,1.456,3,1.917,7,0.03,11,3.215,12,2.273,13,1.726,14,1.726,15,0.285,16,0.242,17,0.202,20,0.484,21,0.635,39,0.285,40,0.016,41,0.022,42,0.022,45,1.917,102,2.739,115,3.087,334,3.924,359,3.399,368,2.981,376,2.981,377,2.981,378,2.981,379,3.564,380,3.564]],["title/injectables/UsersService.html",[107,0.74,115,1.548]],["body/injectables/UsersService.html",[7,0.031,15,0.173,16,0.147,17,0.122,20,0.41,21,0.386,39,0.173,40,0.01,41,0.016,42,0.016,49,0.422,50,1.144,57,1.319,59,1.751,60,1.492,61,1.617,63,1.751,68,2.24,71,1.073,79,1.922,87,0.885,92,1.898,107,0.763,108,0.962,113,1.264,115,1.595,121,1.721,124,1.922,138,1.345,139,2.36,140,1.746,141,1.595,142,1.746,147,1.746,150,2.673,151,1.746,154,1.746,163,1.148,165,1.148,182,1.578,183,2.24,190,1.578,192,2.399,356,3.152,362,2.754,381,1.811,382,3.293,383,2.166,384,2.166,385,2.166,386,2.166,387,3.293,388,2.166,389,2.166,390,2.166,391,2.166,392,2.166,393,3.293,394,2.166,395,2.166]],["title/coverage.html",[396,3.177]],["body/coverage.html",[7,0.03,17,0.145,40,0.026,41,0.018,42,0.018,43,1.978,44,1.665,46,2.149,68,1.141,71,0.547,76,1.244,80,1.665,100,1.499,107,1.284,109,2.149,115,1.244,135,1.665,136,2.149,144,1.362,155,1.499,161,1.362,181,2.149,183,1.141,198,2.149,199,2.724,207,1.362,208,2.149,209,2.724,221,2.149,222,2.856,237,1.665,238,1.872,240,2.149,254,1.872,255,1.872,257,2.149,267,2.149,268,2.149,270,2.149,287,2.149,288,1.872,289,2.149,293,1.665,294,2.149,301,1.499,303,1.362,318,2.149,337,2.149,351,2.149,354,2.149,356,1.499,357,2.149,359,1.665,360,2.149,381,2.149,396,1.872,397,2.569,398,2.569,399,2.569,400,6.359,401,4.408,402,4.408,403,3.739,404,5.145,405,4.408,406,3.739,407,2.569,408,2.149,409,2.569,410,2.149,411,2.569,412,2.569,413,2.569,414,2.569]],["title/dependencies.html",[3,1.57,415,2.232]],["body/dependencies.html",[3,1.456,7,0.031,21,0.635,25,2.981,29,2.981,40,0.022,41,0.022,42,0.022,84,1.583,105,2.309,128,2.981,205,2.08,265,2.596,279,3.924,280,2.981,347,2.981,416,5.246,417,3.564,418,3.564,419,3.564,420,3.564,421,3.564,422,4.692,423,3.564,424,4.692,425,3.564,426,3.564,427,3.564,428,3.564,429,3.564,430,3.564,431,2.981,432,3.564,433,3.564,434,3.564,435,3.564,436,3.564,437,3.564,438,3.564,439,3.564,440,3.564]],["title/miscellaneous/functions.html",[441,2.232,442,3.214]],["body/miscellaneous/functions.html",[7,0.027,41,0.027,42,0.027,49,0.937,408,4.018,410,5.024,441,4.018,442,4.018,443,4.805]],["title/index.html",[49,0.52,444,2.669,445,2.232]],["body/index.html",[7,0.03,16,0.166,17,0.138,38,2.036,41,0.017,42,0.017,60,0.721,217,2.036,344,2.036,396,1.774,431,4.858,445,2.036,446,2.435,447,2.435,448,3.595,449,2.435,450,2.435,451,2.435,452,2.435,453,2.435,454,2.435,455,2.036,456,4.273,457,2.435,458,2.435,459,2.435,460,2.435,461,5.593,462,2.435,463,2.435,464,5.711,465,3.595,466,2.435,467,3.595,468,2.435,469,2.435,470,2.435,471,2.435,472,3.595,473,3.595,474,2.435,475,2.435,476,2.435,477,2.435,478,4.719,479,2.435,480,2.435,481,2.435,482,2.435,483,2.435,484,3.595,485,2.435,486,2.435,487,2.435,488,5.034,489,2.435,490,3.595,491,2.435,492,2.435,493,2.435,494,2.435,495,2.435,496,2.435,497,2.435,498,2.435,499,2.435,500,2.435,501,2.435,502,2.435,503,2.435,504,2.435,505,2.435,506,3.595,507,3.595,508,2.435,509,2.435,510,3.006,511,3.595,512,3.595,513,2.435,514,2.435,515,2.435,516,2.435,517,2.435,518,2.435,519,2.435,520,2.435,521,2.435,522,2.435,523,2.435,524,2.435,525,2.435,526,2.435,527,2.036,528,2.435,529,2.435,530,2.435,531,2.435,532,2.435,533,2.435,534,2.036]],["title/modules.html",[2,1.782]],["body/modules.html",[1,2.711,2,1.71,6,2.442,7,0.025,8,2.442,9,2.442,10,2.442,11,2.218,41,0.025,42,0.025,510,5.188,535,6.203,536,6.203,537,6.203]],["title/overview.html",[538,3.647]],["body/overview.html",[1,3.974,2,1.153,3,1.634,4,2.36,5,2.36,6,3.457,7,0.03,8,3.115,9,3.115,10,3.235,11,3.021,12,1.937,13,1.367,14,1.367,41,0.019,42,0.019,45,1.153,76,2.25,97,2.36,99,2.36,100,2.712,108,1.253,115,2.76,161,2.463,177,2.36,178,2.36,183,2.532,197,1.253,237,1.829,254,2.056,303,2.463,314,2.36,315,2.36,330,2.36,331,2.36,332,2.36,376,2.36,377,2.36,378,2.36,538,2.36,539,2.822,540,2.822,541,4,542,4]],["title/properties.html",[200,1.861,415,2.232]],["body/properties.html",[7,0.03,41,0.027,42,0.027,200,2.283,455,3.942,527,3.942,534,3.942,543,4.714,544,4.714,545,4.714]]],"invertedIndex":[["",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/CreateCategoryDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ExpressSwaggerCustomOptions.html":{},"guards/JwtGuard.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdatePostDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":400,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":544,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":434,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":427,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":426,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":429,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":404,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":407,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":403,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":402,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":401,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":411,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":405,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":406,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":412,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":542,"title":{},"body":{"overview.html":{}}}],["1.0.0",{"_index":430,"title":{},"body":{"dependencies.html":{}}}],["17.6.0",{"_index":428,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":417,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":436,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":540,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":424,"title":{},"body":{"dependencies.html":{}}}],["4.4.0",{"_index":440,"title":{},"body":{"dependencies.html":{}}}],["5.2.1",{"_index":423,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":539,"title":{},"body":{"overview.html":{}}}],["7",{"_index":541,"title":{},"body":{"overview.html":{}}}],["7.2.0",{"_index":437,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":234,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["8.0.0",{"_index":416,"title":{},"body":{"dependencies.html":{}}}],["8.0.1",{"_index":419,"title":{},"body":{"dependencies.html":{}}}],["8.2.2",{"_index":420,"title":{},"body":{"dependencies.html":{}}}],["added",{"_index":220,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["amazing",{"_index":518,"title":{},"body":{"index.html":{}}}],["api/v1/auth",{"_index":48,"title":{},"body":{"controllers/AuthController.html":{}}}],["api/v1/categories",{"_index":137,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["api/v1/users",{"_index":361,"title":{},"body":{"controllers/UsersController.html":{}}}],["apitags",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["apitags('auth",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('categories",{"_index":166,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["apitags('posts",{"_index":306,"title":{},"body":{"controllers/PostsController.html":{}}}],["apitags('users",{"_index":369,"title":{},"body":{"controllers/UsersController.html":{}}}],["app",{"_index":344,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["app.close",{"_index":350,"title":{},"body":{"injectables/PrismaService.html":{}}}],["applications",{"_index":454,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["async",{"_index":110,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"injectables/PrismaService.html":{}}}],["auth",{"_index":219,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["auth.controller",{"_index":103,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.guard.ts",{"_index":268,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth.service",{"_index":77,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/auth.module",{"_index":28,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":44,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":269,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authmodule",{"_index":6,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":527,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":76,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["await",{"_index":131,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"injectables/PrismaService.html":{}}}],["backers",{"_index":519,"title":{},"body":{"index.html":{}}}],["block",{"_index":494,"title":{},"body":{"index.html":{}}}],["body",{"_index":72,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"classes/CreatePostDto.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["boolean",{"_index":252,"title":{},"body":{"interfaces/ExpressSwaggerCustomOptions.html":{},"guards/JwtGuard.html":{}}}],["bootstrap",{"_index":410,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":537,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":535,"title":{},"body":{"modules.html":{}}}],["building",{"_index":449,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":258,"title":{},"body":{"guards/JwtGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["canactivate(context",{"_index":259,"title":{},"body":{"guards/JwtGuard.html":{}}}],["categories",{"_index":217,"title":{},"body":{"classes/CreatePostDto.html":{},"index.html":{}}}],["categories.controller",{"_index":180,"title":{},"body":{"modules/CategoriesModule.html":{}}}],["categories.service",{"_index":162,"title":{},"body":{"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{}}}],["categories/categories.module",{"_index":26,"title":{},"body":{"modules/AppModule.html":{}}}],["categoriescontroller",{"_index":135,"title":{"controllers/CategoriesController.html":{}},"body":{"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"coverage.html":{}}}],["categoriesmodule",{"_index":8,"title":{"modules/CategoriesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CategoriesModule.html":{},"modules.html":{},"overview.html":{}}}],["categoriesservice",{"_index":161,"title":{"injectables/CategoriesService.html":{}},"body":{"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"coverage.html":{},"overview.html":{}}}],["category.dto",{"_index":164,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/UpdateCategoryDto.html":{}}}],["category.dto.ts",{"_index":199,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/UpdateCategoryDto.html":{},"coverage.html":{}}}],["category.dto.ts:6",{"_index":202,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["class",{"_index":40,"title":{"classes/CreateCategoryDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdatePostDto.html":{},"classes/UpdateUserDto.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/CreateCategoryDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"guards/JwtGuard.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdatePostDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":197,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdatePostDto.html":{},"classes/UpdateUserDto.html":{},"overview.html":{}}}],["client",{"_index":508,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":97,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":98,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":99,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_categoriesmodule",{"_index":177,"title":{},"body":{"modules/CategoriesModule.html":{},"overview.html":{}}}],["cluster_categoriesmodule_providers",{"_index":178,"title":{},"body":{"modules/CategoriesModule.html":{},"overview.html":{}}}],["cluster_postsmodule",{"_index":314,"title":{},"body":{"modules/PostsModule.html":{},"overview.html":{}}}],["cluster_postsmodule_providers",{"_index":315,"title":{},"body":{"modules/PostsModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":330,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":332,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":331,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":376,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":377,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":378,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cockroachdb",{"_index":502,"title":{},"body":{"index.html":{}}}],["configmodule",{"_index":24,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":30,"title":{},"body":{"modules/AppModule.html":{}}}],["const",{"_index":129,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{}}}],["constructor",{"_index":113,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"injectables/LocalStrategy.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{}}}],["constructor(authservice",{"_index":272,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(prismaservice",{"_index":182,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{}}}],["constructor(private",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"injectables/LocalStrategy.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":114,"title":{},"body":{"injectables/AuthService.html":{}}}],["context",{"_index":262,"title":{},"body":{"guards/JwtGuard.html":{}}}],["controller",{"_index":43,"title":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('api/v1/auth",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('api/v1/categories",{"_index":167,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["controller('api/v1/users",{"_index":370,"title":{},"body":{"controllers/UsersController.html":{}}}],["controller('posts",{"_index":307,"title":{},"body":{"controllers/PostsController.html":{}}}],["controllers",{"_index":45,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["coverage",{"_index":396,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":138,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdatePostDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["create(@body",{"_index":168,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["create(createcategorydto",{"_index":143,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{}}}],["create(createpostdto",{"_index":296,"title":{},"body":{"controllers/PostsController.html":{},"injectables/PostsService.html":{}}}],["create(createuserdto",{"_index":362,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["createcategorydto",{"_index":144,"title":{"classes/CreateCategoryDto.html":{}},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/CreateCategoryDto.html":{},"classes/UpdateCategoryDto.html":{},"coverage.html":{}}}],["createpostdto",{"_index":207,"title":{"classes/CreatePostDto.html":{}},"body":{"classes/CreatePostDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"classes/UpdatePostDto.html":{},"coverage.html":{}}}],["createuserdto",{"_index":68,"title":{"classes/CreateUserDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["customcss",{"_index":241,"title":{},"body":{"interfaces/ExpressSwaggerCustomOptions.html":{}}}],["customcssurl",{"_index":242,"title":{},"body":{"interfaces/ExpressSwaggerCustomOptions.html":{}}}],["customfavicon",{"_index":243,"title":{},"body":{"interfaces/ExpressSwaggerCustomOptions.html":{}}}],["customjs",{"_index":244,"title":{},"body":{"interfaces/ExpressSwaggerCustomOptions.html":{}}}],["customsitetitle",{"_index":245,"title":{},"body":{"interfaces/ExpressSwaggerCustomOptions.html":{}}}],["data",{"_index":192,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{}}}],["database",{"_index":488,"title":{},"body":{"index.html":{}}}],["database_url",{"_index":485,"title":{},"body":{"index.html":{}}}],["datasource",{"_index":493,"title":{},"body":{"index.html":{}}}],["db",{"_index":503,"title":{},"body":{"index.html":{}}}],["decorators",{"_index":55,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"classes/CreateCategoryDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["defined",{"_index":57,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/CreateCategoryDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"guards/JwtGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/PrismaService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":160,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["delete(':id",{"_index":152,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/PostsModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":455,"title":{},"body":{"index.html":{},"properties.html":{}}}],["dev",{"_index":482,"title":{},"body":{"index.html":{}}}],["development",{"_index":463,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":397,"title":{},"body":{"coverage.html":{}}}],["dto/create",{"_index":163,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/update",{"_index":165,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["e2e",{"_index":474,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":450,"title":{},"body":{"index.html":{}}}],["email",{"_index":124,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"injectables/UsersService.html":{}}}],["enableshutdownhooks",{"_index":339,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":341,"title":{},"body":{"injectables/PrismaService.html":{}}}],["env",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["envfilepath",{"_index":37,"title":{},"body":{"modules/AppModule.html":{}}}],["executioncontext",{"_index":260,"title":{},"body":{"guards/JwtGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["existing",{"_index":487,"title":{},"body":{"index.html":{}}}],["explorer",{"_index":246,"title":{},"body":{"interfaces/ExpressSwaggerCustomOptions.html":{}}}],["export",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/CreateCategoryDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ExpressSwaggerCustomOptions.html":{},"guards/JwtGuard.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdatePostDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":334,"title":{},"body":{"modules/PrismaModule.html":{},"modules/UsersModule.html":{}}}],["express",{"_index":422,"title":{},"body":{"dependencies.html":{}}}],["expressswaggercustomoptions",{"_index":238,"title":{"interfaces/ExpressSwaggerCustomOptions.html":{}},"body":{"interfaces/ExpressSwaggerCustomOptions.html":{},"coverage.html":{}}}],["extends",{"_index":281,"title":{},"body":{"injectables/LocalStrategy.html":{},"injectables/PrismaService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdatePostDto.html":{},"classes/UpdateUserDto.html":{}}}],["false",{"_index":134,"title":{},"body":{"injectables/AuthService.html":{}}}],["file",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/CreateCategoryDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ExpressSwaggerCustomOptions.html":{},"guards/JwtGuard.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdatePostDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"index.html":{}}}],["findall",{"_index":139,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone",{"_index":140,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone(@param('id",{"_index":171,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["findone(id",{"_index":147,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findonebyemail",{"_index":382,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyemail(email",{"_index":387,"title":{},"body":{"injectables/UsersService.html":{}}}],["firstname",{"_index":223,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["framework",{"_index":448,"title":{},"body":{"index.html":{}}}],["function",{"_index":409,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":442,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generate",{"_index":507,"title":{},"body":{"index.html":{}}}],["get(':id",{"_index":148,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["get('profile",{"_index":65,"title":{},"body":{"controllers/AuthController.html":{}}}],["getting",{"_index":444,"title":{"index.html":{}},"body":{}}],["global",{"_index":335,"title":{},"body":{"modules/PrismaModule.html":{}}}],["grow",{"_index":515,"title":{},"body":{"index.html":{}}}],["guard",{"_index":254,"title":{"guards/JwtGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":256,"title":{},"body":{"guards/JwtGuard.html":{}}}],["guards/local",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{}}}],["here",{"_index":524,"title":{},"body":{"index.html":{}}}],["https://nestjs.com",{"_index":531,"title":{},"body":{"index.html":{}}}],["https://pris.ly/d/getting",{"_index":491,"title":{},"body":{"index.html":{}}}],["id",{"_index":150,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":398,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":266,"title":{},"body":{"guards/JwtGuard.html":{},"injectables/PrismaService.html":{}}}],["import",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/CreateCategoryDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"guards/JwtGuard.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdatePostDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["index",{"_index":49,"title":{"index.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/CreateCategoryDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ExpressSwaggerCustomOptions.html":{},"guards/JwtGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/PrismaService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["inestapplication",{"_index":342,"title":{},"body":{"injectables/PrismaService.html":{}}}],["info",{"_index":15,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/CreateCategoryDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ExpressSwaggerCustomOptions.html":{},"guards/JwtGuard.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdatePostDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["init",{"_index":479,"title":{},"body":{"index.html":{}}}],["initialize",{"_index":477,"title":{},"body":{"index.html":{}}}],["injectable",{"_index":107,"title":{"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/PostsService.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"guards/JwtGuard.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/PostsService.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":108,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/PostsService.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["install",{"_index":483,"title":{},"body":{"index.html":{}}}],["installation",{"_index":460,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":462,"title":{},"body":{"index.html":{}}}],["interface",{"_index":237,"title":{"interfaces/ExpressSwaggerCustomOptions.html":{}},"body":{"interfaces/ExpressSwaggerCustomOptions.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":239,"title":{},"body":{"interfaces/ExpressSwaggerCustomOptions.html":{}}}],["isemail",{"_index":225,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{}}}],["isemail()@isnotempty",{"_index":290,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["isglobal",{"_index":31,"title":{},"body":{"modules/AppModule.html":{}}}],["isnotempty",{"_index":203,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{}}}],["isnotempty()@isstring()@minlength(3",{"_index":212,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isnotempty()@minlength(3",{"_index":201,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["isstring",{"_index":216,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{}}}],["isstring()@isnotempty",{"_index":292,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["isstring()@isnotempty()@minlength(3",{"_index":227,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isstring()@isnotempty()@minlength(8",{"_index":230,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["joi",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["joi.object",{"_index":34,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().required",{"_index":36,"title":{},"body":{"modules/AppModule.html":{}}}],["join",{"_index":521,"title":{},"body":{"index.html":{}}}],["jwtguard",{"_index":255,"title":{"guards/JwtGuard.html":{}},"body":{"guards/JwtGuard.html":{},"coverage.html":{}}}],["kamil",{"_index":528,"title":{},"body":{"index.html":{}}}],["lastname",{"_index":224,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["length",{"_index":232,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["license",{"_index":534,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":512,"title":{},"body":{"index.html":{}}}],["local",{"_index":280,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["localauthguard",{"_index":80,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["localstrategy",{"_index":100,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["login",{"_index":51,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(@request",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(req",{"_index":54,"title":{},"body":{"controllers/AuthController.html":{}}}],["loginuserdto",{"_index":288,"title":{"classes/LoginUserDto.html":{}},"body":{"classes/LoginUserDto.html":{},"coverage.html":{}}}],["match",{"_index":496,"title":{},"body":{"index.html":{}}}],["matching",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/CreateCategoryDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ExpressSwaggerCustomOptions.html":{},"guards/JwtGuard.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdatePostDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["message",{"_index":231,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["metadata",{"_index":433,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":50,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"guards/JwtGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/PrismaService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["migrate",{"_index":481,"title":{},"body":{"index.html":{}}}],["migrations",{"_index":480,"title":{},"body":{"index.html":{}}}],["minlength",{"_index":204,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{}}}],["minlength(3",{"_index":206,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{}}}],["minlength(8",{"_index":236,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["miscellaneous",{"_index":441,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mit",{"_index":511,"title":{},"body":{"index.html":{}}}],["mode",{"_index":467,"title":{},"body":{"index.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/PostsModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/PostsModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{}}}],["moduleref",{"_index":127,"title":{},"body":{"injectables/AuthService.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/PostsModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["mongodb",{"_index":501,"title":{},"body":{"index.html":{}}}],["more",{"_index":523,"title":{},"body":{"index.html":{}}}],["mysql",{"_index":498,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":529,"title":{},"body":{"index.html":{}}}],["name",{"_index":60,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/CreateCategoryDto.html":{},"guards/JwtGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/PrismaService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["ness",{"_index":233,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["nest",{"_index":456,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":533,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"guards/JwtGuard.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":128,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":418,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":105,"title":{},"body":{"modules/AuthModule.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":421,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/PostsController.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdatePostDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["new",{"_index":287,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["node.js",{"_index":447,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":125,"title":{},"body":{"injectables/AuthService.html":{}}}],["npm",{"_index":461,"title":{},"body":{"index.html":{}}}],["npx",{"_index":478,"title":{},"body":{"index.html":{}}}],["observable",{"_index":264,"title":{},"body":{"guards/JwtGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["onmoduledestroy",{"_index":346,"title":{},"body":{"injectables/PrismaService.html":{}}}],["onmoduleinit",{"_index":340,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":513,"title":{},"body":{"index.html":{}}}],["optional",{"_index":61,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"interfaces/ExpressSwaggerCustomOptions.html":{},"guards/JwtGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/PrismaService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["out",{"_index":14,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/PostsModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":538,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":415,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":159,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["param('id",{"_index":173,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["parameters",{"_index":59,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"guards/JwtGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/PrismaService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["partialtype",{"_index":352,"title":{},"body":{"classes/UpdateCategoryDto.html":{},"classes/UpdatePostDto.html":{},"classes/UpdateUserDto.html":{}}}],["partialtype(createcategorydto",{"_index":353,"title":{},"body":{"classes/UpdateCategoryDto.html":{}}}],["partialtype(createpostdto",{"_index":355,"title":{},"body":{"classes/UpdatePostDto.html":{}}}],["partialtype(createuserdto",{"_index":358,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["passport",{"_index":279,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":104,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":277,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":282,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["password",{"_index":122,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{}}}],["patch",{"_index":158,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["patch(':id",{"_index":156,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["please",{"_index":522,"title":{},"body":{"index.html":{}}}],["point",{"_index":486,"title":{},"body":{"index.html":{}}}],["port",{"_index":35,"title":{},"body":{"modules/AppModule.html":{}}}],["post",{"_index":73,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["post('login",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login')@useguards(localauthguard",{"_index":56,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register",{"_index":69,"title":{},"body":{"controllers/AuthController.html":{}}}],["post.dto",{"_index":305,"title":{},"body":{"controllers/PostsController.html":{},"injectables/PostsService.html":{},"classes/UpdatePostDto.html":{}}}],["post.dto.ts",{"_index":209,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/UpdatePostDto.html":{},"coverage.html":{}}}],["post.dto.ts:12",{"_index":213,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:15",{"_index":215,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:7",{"_index":214,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["postgresql",{"_index":497,"title":{},"body":{"index.html":{}}}],["posts",{"_index":295,"title":{},"body":{"controllers/PostsController.html":{}}}],["posts.controller",{"_index":317,"title":{},"body":{"modules/PostsModule.html":{}}}],["posts.service",{"_index":304,"title":{},"body":{"controllers/PostsController.html":{},"modules/PostsModule.html":{}}}],["posts/posts.module",{"_index":27,"title":{},"body":{"modules/AppModule.html":{}}}],["postscontroller",{"_index":293,"title":{"controllers/PostsController.html":{}},"body":{"controllers/PostsController.html":{},"modules/PostsModule.html":{},"coverage.html":{}}}],["postsmodule",{"_index":9,"title":{"modules/PostsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PostsModule.html":{},"modules.html":{},"overview.html":{}}}],["postsservice",{"_index":303,"title":{"injectables/PostsService.html":{}},"body":{"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"coverage.html":{},"overview.html":{}}}],["prefix",{"_index":47,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["prisma",{"_index":431,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["prisma.service",{"_index":336,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/client",{"_index":347,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["prisma/prisma.module",{"_index":22,"title":{},"body":{"modules/AppModule.html":{}}}],["prisma/prisma.service",{"_index":190,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{}}}],["prismaclient",{"_index":338,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismamodule",{"_index":10,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PrismaModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":183,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/CategoriesService.html":{},"injectables/PostsService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["production",{"_index":469,"title":{},"body":{"index.html":{}}}],["profile",{"_index":52,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(@request",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(req",{"_index":64,"title":{},"body":{"controllers/AuthController.html":{}}}],["progressive",{"_index":446,"title":{},"body":{"index.html":{}}}],["project",{"_index":514,"title":{},"body":{"index.html":{}}}],["promise",{"_index":263,"title":{},"body":{"guards/JwtGuard.html":{}}}],["properties",{"_index":200,"title":{"properties.html":{}},"body":{"classes/CreateCategoryDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ExpressSwaggerCustomOptions.html":{},"classes/LoginUserDto.html":{},"properties.html":{}}}],["provider",{"_index":492,"title":{},"body":{"index.html":{}}}],["providers",{"_index":102,"title":{},"body":{"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/PostsModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{}}}],["pull",{"_index":504,"title":{},"body":{"index.html":{}}}],["querying",{"_index":509,"title":{},"body":{"index.html":{}}}],["read",{"_index":490,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{}}}],["record",{"_index":253,"title":{},"body":{"interfaces/ExpressSwaggerCustomOptions.html":{}}}],["reflect",{"_index":432,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":53,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(@body",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(createuserdto",{"_index":67,"title":{},"body":{"controllers/AuthController.html":{}}}],["registeruser",{"_index":111,"title":{},"body":{"injectables/AuthService.html":{}}}],["registeruser(createuserdto",{"_index":117,"title":{},"body":{"injectables/AuthService.html":{}}}],["remove",{"_index":141,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/CreatePostDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["remove(@param('id",{"_index":175,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["remove(id",{"_index":151,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["repository",{"_index":459,"title":{},"body":{"index.html":{}}}],["req",{"_index":62,"title":{},"body":{"controllers/AuthController.html":{}}}],["req.user",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{}}}],["request",{"_index":74,"title":{},"body":{"controllers/AuthController.html":{}}}],["reset",{"_index":13,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/PostsModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["results",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/CreateCategoryDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ExpressSwaggerCustomOptions.html":{},"guards/JwtGuard.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdatePostDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["return",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"guards/JwtGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":63,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"guards/JwtGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/PrismaService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["rimraf",{"_index":435,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":464,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":265,"title":{},"body":{"guards/JwtGuard.html":{},"injectables/LocalAuthGuard.html":{},"dependencies.html":{}}}],["scalable",{"_index":451,"title":{},"body":{"index.html":{}}}],["schema",{"_index":506,"title":{},"body":{"index.html":{}}}],["schema.prisma",{"_index":495,"title":{},"body":{"index.html":{}}}],["server",{"_index":452,"title":{},"body":{"index.html":{}}}],["set",{"_index":484,"title":{},"body":{"index.html":{}}}],["side",{"_index":453,"title":{},"body":{"index.html":{}}}],["source",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/CreateCategoryDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ExpressSwaggerCustomOptions.html":{},"guards/JwtGuard.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdatePostDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sponsors",{"_index":517,"title":{},"body":{"index.html":{}}}],["sqlite",{"_index":499,"title":{},"body":{"index.html":{}}}],["sqlserver",{"_index":500,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":443,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.module.ts",{"_index":18,"title":{},"body":{"modules/AppModule.html":{}}}],["src/auth/auth.controller.ts",{"_index":46,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:21",{"_index":58,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:26",{"_index":70,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:31",{"_index":66,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":101,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":109,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:10",{"_index":123,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:16",{"_index":118,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:7",{"_index":116,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/login",{"_index":289,"title":{},"body":{"classes/LoginUserDto.html":{},"coverage.html":{}}}],["src/auth/guards/jwt.guard.ts",{"_index":257,"title":{},"body":{"guards/JwtGuard.html":{},"coverage.html":{}}}],["src/auth/guards/jwt.guard.ts:6",{"_index":261,"title":{},"body":{"guards/JwtGuard.html":{}}}],["src/auth/guards/local",{"_index":267,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/auth/strategies/local.strategy.ts",{"_index":270,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/local.strategy.ts:14",{"_index":275,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/strategies/local.strategy.ts:7",{"_index":273,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/categories/categories.controller.ts",{"_index":136,"title":{},"body":{"controllers/CategoriesController.html":{},"coverage.html":{}}}],["src/categories/categories.controller.ts:21",{"_index":145,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["src/categories/categories.controller.ts:26",{"_index":146,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["src/categories/categories.controller.ts:31",{"_index":149,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["src/categories/categories.controller.ts:36",{"_index":157,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["src/categories/categories.controller.ts:44",{"_index":153,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["src/categories/categories.module.ts",{"_index":179,"title":{},"body":{"modules/CategoriesModule.html":{}}}],["src/categories/categories.service.ts",{"_index":181,"title":{},"body":{"injectables/CategoriesService.html":{},"coverage.html":{}}}],["src/categories/categories.service.ts:13",{"_index":186,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/categories/categories.service.ts:17",{"_index":187,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/categories/categories.service.ts:21",{"_index":189,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/categories/categories.service.ts:28",{"_index":188,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/categories/categories.service.ts:7",{"_index":184,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/categories/categories.service.ts:9",{"_index":185,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/categories/dto/create",{"_index":198,"title":{},"body":{"classes/CreateCategoryDto.html":{},"coverage.html":{}}}],["src/categories/dto/update",{"_index":351,"title":{},"body":{"classes/UpdateCategoryDto.html":{},"coverage.html":{}}}],["src/interfaces/swagger.interface.ts",{"_index":240,"title":{},"body":{"interfaces/ExpressSwaggerCustomOptions.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":408,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/posts/dto/create",{"_index":208,"title":{},"body":{"classes/CreatePostDto.html":{},"coverage.html":{}}}],["src/posts/dto/update",{"_index":354,"title":{},"body":{"classes/UpdatePostDto.html":{},"coverage.html":{}}}],["src/posts/posts.controller.ts",{"_index":294,"title":{},"body":{"controllers/PostsController.html":{},"coverage.html":{}}}],["src/posts/posts.controller.ts:21",{"_index":297,"title":{},"body":{"controllers/PostsController.html":{}}}],["src/posts/posts.controller.ts:26",{"_index":298,"title":{},"body":{"controllers/PostsController.html":{}}}],["src/posts/posts.controller.ts:31",{"_index":299,"title":{},"body":{"controllers/PostsController.html":{}}}],["src/posts/posts.controller.ts:36",{"_index":302,"title":{},"body":{"controllers/PostsController.html":{}}}],["src/posts/posts.controller.ts:41",{"_index":300,"title":{},"body":{"controllers/PostsController.html":{}}}],["src/posts/posts.module.ts",{"_index":316,"title":{},"body":{"modules/PostsModule.html":{}}}],["src/posts/posts.service.ts",{"_index":318,"title":{},"body":{"injectables/PostsService.html":{},"coverage.html":{}}}],["src/posts/posts.service.ts:10",{"_index":320,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/posts/posts.service.ts:14",{"_index":321,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/posts/posts.service.ts:18",{"_index":322,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/posts/posts.service.ts:22",{"_index":324,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/posts/posts.service.ts:29",{"_index":323,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/posts/posts.service.ts:7",{"_index":319,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/prisma/prisma.module.ts",{"_index":333,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service.ts",{"_index":337,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:11",{"_index":345,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:15",{"_index":343,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/users/dto/create",{"_index":221,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":357,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/users.controller.ts",{"_index":360,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:21",{"_index":363,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:26",{"_index":364,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:31",{"_index":365,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:36",{"_index":367,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:41",{"_index":366,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module.ts",{"_index":379,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service.ts",{"_index":381,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:10",{"_index":384,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:14",{"_index":385,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:18",{"_index":386,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:22",{"_index":388,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:26",{"_index":390,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:33",{"_index":389,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:7",{"_index":383,"title":{},"body":{"injectables/UsersService.html":{}}}],["start",{"_index":465,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":468,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":470,"title":{},"body":{"index.html":{}}}],["started",{"_index":445,"title":{"index.html":{}},"body":{"index.html":{}}}],["starter",{"_index":458,"title":{},"body":{"index.html":{}}}],["statements",{"_index":399,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":525,"title":{},"body":{"index.html":{}}}],["strategies/local.strategy",{"_index":106,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy",{"_index":278,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["string",{"_index":121,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/CreateCategoryDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ExpressSwaggerCustomOptions.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["super",{"_index":283,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["support",{"_index":510,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":536,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":438,"title":{},"body":{"dependencies.html":{}}}],["swaggeroptions",{"_index":247,"title":{},"body":{"interfaces/ExpressSwaggerCustomOptions.html":{}}}],["swaggerurl",{"_index":248,"title":{},"body":{"interfaces/ExpressSwaggerCustomOptions.html":{}}}],["table",{"_index":414,"title":{},"body":{"coverage.html":{}}}],["tables",{"_index":489,"title":{},"body":{"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":413,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":473,"title":{},"body":{"index.html":{}}}],["test:covsetup",{"_index":476,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":475,"title":{},"body":{"index.html":{}}}],["tests",{"_index":472,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":516,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":348,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('beforeexit",{"_index":349,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.authservice.registeruser(createuserdto",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(email",{"_index":285,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.categoriesservice.create(createcategorydto",{"_index":169,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["this.categoriesservice.findall",{"_index":170,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["this.categoriesservice.findone(id",{"_index":172,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["this.categoriesservice.remove(id",{"_index":176,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["this.categoriesservice.update(id",{"_index":174,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["this.postsservice.create(createpostdto",{"_index":308,"title":{},"body":{"controllers/PostsController.html":{}}}],["this.postsservice.findall",{"_index":309,"title":{},"body":{"controllers/PostsController.html":{}}}],["this.postsservice.findone(id",{"_index":310,"title":{},"body":{"controllers/PostsController.html":{}}}],["this.postsservice.remove(id",{"_index":313,"title":{},"body":{"controllers/PostsController.html":{}}}],["this.postsservice.update(id",{"_index":312,"title":{},"body":{"controllers/PostsController.html":{}}}],["this.prismaservice.category.create",{"_index":191,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.prismaservice.category.delete",{"_index":196,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.prismaservice.category.findmany",{"_index":193,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.prismaservice.category.findunique",{"_index":194,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.prismaservice.category.update",{"_index":195,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.prismaservice.post.create",{"_index":325,"title":{},"body":{"injectables/PostsService.html":{}}}],["this.prismaservice.post.delete",{"_index":329,"title":{},"body":{"injectables/PostsService.html":{}}}],["this.prismaservice.post.findmany",{"_index":326,"title":{},"body":{"injectables/PostsService.html":{}}}],["this.prismaservice.post.findunique",{"_index":327,"title":{},"body":{"injectables/PostsService.html":{}}}],["this.prismaservice.post.update",{"_index":328,"title":{},"body":{"injectables/PostsService.html":{}}}],["this.prismaservice.user.create",{"_index":391,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prismaservice.user.delete",{"_index":395,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prismaservice.user.findmany",{"_index":392,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prismaservice.user.findunique",{"_index":393,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prismaservice.user.update",{"_index":394,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.create(createuserdto",{"_index":371,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findall",{"_index":372,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findone(id",{"_index":373,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findonebyemail(email",{"_index":132,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.remove(id",{"_index":375,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.update(id",{"_index":374,"title":{},"body":{"controllers/UsersController.html":{}}}],["throw",{"_index":286,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["title",{"_index":210,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["todo",{"_index":218,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["touch",{"_index":526,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":425,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"guards/JwtGuard.html":{}}}],["turn",{"_index":505,"title":{},"body":{"index.html":{}}}],["twitter",{"_index":532,"title":{},"body":{"index.html":{}}}],["type",{"_index":71,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/CreateCategoryDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"interfaces/ExpressSwaggerCustomOptions.html":{},"guards/JwtGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/PrismaService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["typescript",{"_index":457,"title":{},"body":{"index.html":{}}}],["ui",{"_index":439,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedexception",{"_index":276,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["unit",{"_index":471,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":119,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{}}}],["unlicensed",{"_index":545,"title":{},"body":{"properties.html":{}}}],["update",{"_index":142,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["update(@param('id",{"_index":311,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["update(id",{"_index":154,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updatecategorydto",{"_index":155,"title":{"classes/UpdateCategoryDto.html":{}},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/UpdateCategoryDto.html":{},"coverage.html":{}}}],["updatepostdto",{"_index":301,"title":{"classes/UpdatePostDto.html":{}},"body":{"controllers/PostsController.html":{},"injectables/PostsService.html":{},"classes/UpdatePostDto.html":{},"coverage.html":{}}}],["updateuserdto",{"_index":356,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["url",{"_index":249,"title":{},"body":{"interfaces/ExpressSwaggerCustomOptions.html":{}}}],["urls",{"_index":250,"title":{},"body":{"interfaces/ExpressSwaggerCustomOptions.html":{}}}],["useguards",{"_index":75,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(localauthguard",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{}}}],["user",{"_index":130,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{}}}],["user.dto",{"_index":79,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":222,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:10",{"_index":228,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{}}}],["user.dto.ts:15",{"_index":229,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:20",{"_index":235,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:5",{"_index":226,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:6",{"_index":291,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["user.password",{"_index":133,"title":{},"body":{"injectables/AuthService.html":{}}}],["userid",{"_index":211,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["usernamefield",{"_index":284,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["users.controller",{"_index":380,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":368,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/dto/create",{"_index":78,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["users/users.module",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["users/users.service",{"_index":126,"title":{},"body":{"injectables/AuthService.html":{}}}],["userscontroller",{"_index":359,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":11,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":115,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["validate",{"_index":271,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validate(email",{"_index":274,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validateuser",{"_index":112,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(email",{"_index":120,"title":{},"body":{"injectables/AuthService.html":{}}}],["validationschema",{"_index":33,"title":{},"body":{"modules/AppModule.html":{}}}],["validator",{"_index":205,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{},"dependencies.html":{}}}],["validatorurl",{"_index":251,"title":{},"body":{"interfaces/ExpressSwaggerCustomOptions.html":{}}}],["version",{"_index":543,"title":{},"body":{"properties.html":{}}}],["watch",{"_index":466,"title":{},"body":{"index.html":{}}}],["website",{"_index":530,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":520,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/PostsModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCategoriesModule\n\nCategoriesModule\n\nAppModule -->\n\nCategoriesModule->AppModule\n\n\n\n\n\nPostsModule\n\nPostsModule\n\nAppModule -->\n\nPostsModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CategoriesModule\n                        \n                        \n                            PostsModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaModule } from './prisma/prisma.module';\nimport { UsersModule } from './users/users.module';\nimport { ConfigModule } from '@nestjs/config';\nimport { CategoriesModule } from './categories/categories.module';\nimport { PostsModule } from './posts/posts.module';\nimport { AuthModule } from './auth/auth.module';\nimport * as Joi from 'joi';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      validationSchema: Joi.object({\n        PORT: Joi.string().required(),\n      }),\n      envFilePath: '../.env',\n    }),\n    PrismaModule,\n    UsersModule,\n    CategoriesModule,\n    PostsModule,\n    AuthModule,\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api/v1/auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                profile\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')@UseGuards(LocalAuthGuard)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profile\n                        \n                    \n                \n            \n            \n                \nprofile(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('profile')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Post,\n  Request,\n  UseGuards,\n} from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { CreateUserDto } from '../users/dto/create-user.dto';\nimport { LocalAuthGuard } from './guards/local-auth.guard';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('auth')\n@Controller('api/v1/auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  @Post('login')\n  @UseGuards(LocalAuthGuard)\n  login(@Request() req) {\n    return req.user;\n  }\n\n  @Post('register')\n  register(@Body() createUserDto: CreateUserDto) {\n    return this.authService.registerUser(createUserDto);\n  }\n\n  @Get('profile')\n  profile(@Request() req) {\n    return req.user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { PassportModule } from '@nestjs/passport';\nimport { LocalStrategy } from './strategies/local.strategy';\nimport { UsersModule } from '../users/users.module';\n\n@Module({\n  imports: [PassportModule, UsersModule],\n  providers: [AuthService, LocalStrategy],\n  controllers: [AuthController],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                registerUser\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        registerUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    registerUser(createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { CreateUserDto } from '../users/dto/create-user.dto';\nimport { UsersService } from '../users/users.service';\nimport { ModuleRef } from '@nestjs/core';\n\n@Injectable()\nexport class AuthService {\n  constructor(private usersService: UsersService) {}\n\n  async validateUser(email: string, password: string) {\n    const user = await this.usersService.findOneByEmail(email);\n    if (!user || user.password !== password) return false;\n    return user;\n  }\n\n  async registerUser(createUserDto: CreateUserDto) {\n    return '';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CategoriesController.html":{"url":"controllers/CategoriesController.html","title":"controller - CategoriesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CategoriesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/categories.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api/v1/categories\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createCategoryDto: CreateCategoryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/categories/categories.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCategoryDto\n                                    \n                                                CreateCategoryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/categories/categories.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/categories/categories.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/categories/categories.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateCategoryDto: UpdateCategoryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/categories/categories.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateCategoryDto\n                                    \n                                                UpdateCategoryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n} from '@nestjs/common';\nimport { CategoriesService } from './categories.service';\nimport { CreateCategoryDto } from './dto/create-category.dto';\nimport { UpdateCategoryDto } from './dto/update-category.dto';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('categories')\n@Controller('api/v1/categories')\nexport class CategoriesController {\n  constructor(private readonly categoriesService: CategoriesService) {}\n\n  @Post()\n  create(@Body() createCategoryDto: CreateCategoryDto) {\n    return this.categoriesService.create(createCategoryDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.categoriesService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.categoriesService.findOne(id);\n  }\n\n  @Patch(':id')\n  update(\n    @Param('id') id: string,\n    @Body() updateCategoryDto: UpdateCategoryDto,\n  ) {\n    return this.categoriesService.update(id, updateCategoryDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.categoriesService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CategoriesModule.html":{"url":"modules/CategoriesModule.html","title":"module - CategoriesModule","body":"\n                   \n\n\n\n\n    Modules\n    CategoriesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CategoriesModule\n\n\n\ncluster_CategoriesModule_providers\n\n\n\n\nCategoriesService\n\nCategoriesService\n\n\n\nCategoriesModule\n\nCategoriesModule\n\nCategoriesModule -->\n\nCategoriesService->CategoriesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/categories/categories.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CategoriesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CategoriesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CategoriesService } from './categories.service';\nimport { CategoriesController } from './categories.controller';\n\n@Module({\n  controllers: [CategoriesController],\n  providers: [CategoriesService],\n})\nexport class CategoriesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CategoriesService.html":{"url":"injectables/CategoriesService.html","title":"injectable - CategoriesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CategoriesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/categories.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prismaService: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/categories/categories.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prismaService\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createCategoryDto: CreateCategoryDto)\n                \n            \n\n\n            \n                \n                    Defined in src/categories/categories.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCategoryDto\n                                    \n                                                CreateCategoryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/categories/categories.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/categories/categories.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/categories/categories.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateCategoryDto: UpdateCategoryDto)\n                \n            \n\n\n            \n                \n                    Defined in src/categories/categories.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateCategoryDto\n                                    \n                                                UpdateCategoryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateCategoryDto } from './dto/create-category.dto';\nimport { UpdateCategoryDto } from './dto/update-category.dto';\nimport { PrismaService } from '../prisma/prisma.service';\n\n@Injectable()\nexport class CategoriesService {\n  constructor(private readonly prismaService: PrismaService) {}\n  create(createCategoryDto: CreateCategoryDto) {\n    return this.prismaService.category.create({ data: createCategoryDto });\n  }\n\n  findAll() {\n    return this.prismaService.category.findMany();\n  }\n\n  findOne(id: string) {\n    return this.prismaService.category.findUnique({ where: { id } });\n  }\n\n  update(id: string, updateCategoryDto: UpdateCategoryDto) {\n    return this.prismaService.category.update({\n      data: updateCategoryDto,\n      where: { id },\n    });\n  }\n\n  remove(id: string) {\n    return this.prismaService.category.delete({ where: { id } });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCategoryDto.html":{"url":"classes/CreateCategoryDto.html","title":"class - CreateCategoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCategoryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/dto/create-category.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@MinLength(3)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/categories/dto/create-category.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, MinLength } from 'class-validator';\n\nexport class CreateCategoryDto {\n  @IsNotEmpty()\n  @MinLength(3)\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePostDto.html":{"url":"classes/CreatePostDto.html","title":"class - CreatePostDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePostDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/dto/create-post.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                body\n                            \n                            \n                                title\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        body\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@MinLength(3)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dto/create-post.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@MinLength(3)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dto/create-post.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/posts/dto/create-post.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString, MinLength } from 'class-validator';\n\nexport class CreatePostDto {\n  @IsNotEmpty()\n  @IsString()\n  @MinLength(3)\n  title: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @MinLength(3)\n  body: string;\n\n  // categories: string\n  userId: string; // TODO: Remove after auth is added\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstname\n                            \n                            \n                                lastname\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MinLength(3)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MinLength(3)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MinLength(8, {message: 'Password length should not be ness than 8'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsString, MinLength } from 'class-validator';\n\nexport class CreateUserDto {\n  @IsEmail()\n  email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(3)\n  firstname: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(3)\n  lastname: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(8, { message: 'Password length should not be ness than 8' })\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExpressSwaggerCustomOptions.html":{"url":"interfaces/ExpressSwaggerCustomOptions.html","title":"interface - ExpressSwaggerCustomOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExpressSwaggerCustomOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/swagger.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            customCss\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            customCssUrl\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            customfavIcon\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            customJs\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            customSiteTitle\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            explorer\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            swaggerOptions\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            swaggerUrl\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            url\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            urls\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            validatorUrl\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        customCss\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        customCss:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        customCssUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        customCssUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        customfavIcon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        customfavIcon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        customJs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        customJs:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        customSiteTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        customSiteTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        explorer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        explorer:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        swaggerOptions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        swaggerOptions:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        swaggerUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        swaggerUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        urls\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        urls:     Record[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        validatorUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        validatorUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ExpressSwaggerCustomOptions {\n  explorer?: boolean;\n  swaggerOptions?: Record;\n  customCss?: string;\n  customCssUrl?: string;\n  customJs?: string;\n  customfavIcon?: string;\n  swaggerUrl?: string;\n  customSiteTitle?: string;\n  validatorUrl?: string;\n  url?: string;\n  urls?: Record[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/JwtGuard.html":{"url":"guards/JwtGuard.html","title":"guard - JwtGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    JwtGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/jwt.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/jwt.guard.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class JwtGuard implements CanActivate {\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/local-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthGuard {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/local.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/local.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/local.strategy.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Strategy } from 'passport-local';\nimport { AuthService } from '../auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private authService: AuthService) {\n    super({\n      usernameField: 'email',\n    });\n  }\n\n  async validate(email: string, password: string) {\n    const user = await this.authService.validateUser(email, password);\n    if (!user) throw new UnauthorizedException();\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginUserDto.html":{"url":"classes/LoginUserDto.html","title":"class - LoginUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login-user.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login-user.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsString, MinLength } from 'class-validator';\n\nexport class LoginUserDto {\n  @IsEmail()\n  @IsNotEmpty()\n  email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  password: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PostsController.html":{"url":"controllers/PostsController.html","title":"controller - PostsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PostsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/posts.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                posts\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createPostDto: CreatePostDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/posts/posts.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createPostDto\n                                    \n                                                CreatePostDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/posts/posts.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/posts/posts.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/posts/posts.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updatePostDto: UpdatePostDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/posts/posts.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updatePostDto\n                                    \n                                                UpdatePostDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n} from '@nestjs/common';\nimport { PostsService } from './posts.service';\nimport { CreatePostDto } from './dto/create-post.dto';\nimport { UpdatePostDto } from './dto/update-post.dto';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('posts')\n@Controller('posts')\nexport class PostsController {\n  constructor(private readonly postsService: PostsService) {}\n\n  @Post()\n  create(@Body() createPostDto: CreatePostDto) {\n    return this.postsService.create(createPostDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.postsService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.postsService.findOne(id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updatePostDto: UpdatePostDto) {\n    return this.postsService.update(id, updatePostDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.postsService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PostsModule.html":{"url":"modules/PostsModule.html","title":"module - PostsModule","body":"\n                   \n\n\n\n\n    Modules\n    PostsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PostsModule\n\n\n\ncluster_PostsModule_providers\n\n\n\n\nPostsService\n\nPostsService\n\n\n\nPostsModule\n\nPostsModule\n\nPostsModule -->\n\nPostsService->PostsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/posts/posts.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PostsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PostsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PostsService } from './posts.service';\nimport { PostsController } from './posts.controller';\n\n@Module({\n  controllers: [PostsController],\n  providers: [PostsService],\n})\nexport class PostsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PostsService.html":{"url":"injectables/PostsService.html","title":"injectable - PostsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PostsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/posts.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prismaService: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/posts/posts.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prismaService\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createPostDto: CreatePostDto)\n                \n            \n\n\n            \n                \n                    Defined in src/posts/posts.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createPostDto\n                                    \n                                                CreatePostDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/posts/posts.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/posts/posts.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/posts/posts.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updatePostDto: UpdatePostDto)\n                \n            \n\n\n            \n                \n                    Defined in src/posts/posts.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updatePostDto\n                                    \n                                                UpdatePostDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreatePostDto } from './dto/create-post.dto';\nimport { UpdatePostDto } from './dto/update-post.dto';\nimport { PrismaService } from '../prisma/prisma.service';\n\n@Injectable()\nexport class PostsService {\n  constructor(private readonly prismaService: PrismaService) {}\n\n  create(createPostDto: CreatePostDto) {\n    return this.prismaService.post.create({ data: createPostDto });\n  }\n\n  findAll() {\n    return this.prismaService.post.findMany();\n  }\n\n  findOne(id: string) {\n    return this.prismaService.post.findUnique({ where: { id } });\n  }\n\n  update(id: string, updatePostDto: UpdatePostDto) {\n    return this.prismaService.post.update({\n      data: updatePostDto,\n      where: { id },\n    });\n  }\n\n  remove(id: string) {\n    return this.prismaService.post.delete({ where: { id } });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_PrismaModule_exports\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n\n@Global()\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                    \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  INestApplication,\n  Injectable,\n  OnModuleDestroy,\n  OnModuleInit,\n} from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  async onModuleInit() {\n    await this.$connect();\n  }\n\n  async enableShutdownHooks(app: INestApplication) {\n    this.$on('beforeExit', async () => {\n      await app.close();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCategoryDto.html":{"url":"classes/UpdateCategoryDto.html","title":"class - UpdateCategoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCategoryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/dto/update-category.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateCategoryDto } from './create-category.dto';\n\nexport class UpdateCategoryDto extends PartialType(CreateCategoryDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePostDto.html":{"url":"classes/UpdatePostDto.html","title":"class - UpdatePostDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePostDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/dto/update-post.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreatePostDto } from './create-post.dto';\n\nexport class UpdatePostDto extends PartialType(CreatePostDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api/v1/users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n} from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('users')\n@Controller('api/v1/users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Post()\n  create(@Body() createUserDto: CreateUserDto) {\n    return this.usersService.create(createUserDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.usersService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.usersService.findOne(id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateUserDto: UpdateUserDto) {\n    return this.usersService.update(id, updateUserDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.usersService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\n\n@Module({\n  controllers: [UsersController],\n  providers: [UsersService],\n  exports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                findOneByEmail\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prismaService: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prismaService\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOneByEmail\n                        \n                    \n                \n            \n            \n                \nfindOneByEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { PrismaService } from '../prisma/prisma.service';\n\n@Injectable()\nexport class UsersService {\n  constructor(private prismaService: PrismaService) {}\n\n  create(createUserDto: CreateUserDto) {\n    return this.prismaService.user.create({ data: createUserDto });\n  }\n\n  findAll() {\n    return this.prismaService.user.findMany();\n  }\n\n  findOne(id: string) {\n    return this.prismaService.user.findUnique({ where: { id } });\n  }\n\n  findOneByEmail(email: string) {\n    return this.prismaService.user.findUnique({ where: { email } });\n  }\n\n  update(id: string, updateUserDto: UpdateUserDto) {\n    return this.prismaService.user.update({\n      data: updateUserDto,\n      where: { id },\n    });\n  }\n\n  remove(id: string) {\n    return this.prismaService.user.delete({ where: { id } });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/dto/login-user.dto.ts\n            \n            class\n            LoginUserDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/guards/jwt.guard.ts\n            \n            guard\n            JwtGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/guards/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/strategies/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/categories/categories.controller.ts\n            \n            controller\n            CategoriesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/categories/categories.service.ts\n            \n            injectable\n            CategoriesService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/categories/dto/create-category.dto.ts\n            \n            class\n            CreateCategoryDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/categories/dto/update-category.dto.ts\n            \n            class\n            UpdateCategoryDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/interfaces/swagger.interface.ts\n            \n            interface\n            ExpressSwaggerCustomOptions\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/posts/dto/create-post.dto.ts\n            \n            class\n            CreatePostDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/posts/dto/update-post.dto.ts\n            \n            class\n            UpdatePostDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/posts/posts.controller.ts\n            \n            controller\n            PostsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/posts/posts.service.ts\n            \n            injectable\n            PostsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/8)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/config : ^2.1.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/jwt : ^8.0.1\n        \n            @nestjs/passport : ^8.2.2\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/swagger : ^5.2.1\n        \n            @prisma/client : ^4.0.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            joi : ^17.6.0\n        \n            passport : ^0.6.0\n        \n            passport-local : ^1.0.0\n        \n            prisma : ^4.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.4.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSetup Prisma\n# initialize prisma\nnpx prisma init\n\n# run migrations\nnpx prisma migrate dev --name categories\n\n\n# install prisma \nnpm i prisma\nSet the DATABASE_URL in the .env file to point to your existing database. If your database has no tables yet, read https://pris.ly/d/getting-started\nSet the provider of the datasource block in schema.prisma to match your database: postgresql, mysql, sqlite, sqlserver, mongodb or cockroachdb.\nRun npx prisma db pull to turn your database schema into a Prisma schema.\nRun npx prisma generate to generate the Prisma Client. You can then start querying your database.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CategoriesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PostsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CategoriesModule\n\n\n\ncluster_CategoriesModule_providers\n\n\n\ncluster_PostsModule\n\n\n\ncluster_PostsModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCategoriesModule\n\nCategoriesModule\n\nAppModule -->\n\nCategoriesModule->AppModule\n\n\n\n\n\nPostsModule\n\nPostsModule\n\nAppModule -->\n\nPostsModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nCategoriesService\n\nCategoriesService\n\nCategoriesModule -->\n\nCategoriesService->CategoriesModule\n\n\n\n\n\nPostsService\n\nPostsService\n\nPostsModule -->\n\nPostsService->PostsModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
